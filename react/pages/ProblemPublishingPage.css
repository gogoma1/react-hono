/* react/pages/ProblemPublishingPage.css */

/*
 * [핵심] 페이지 전체를 Flexbox 컨테이너로 설정합니다.
 * 이렇게 해야 자식 요소들이 높이를 동적으로 분배할 수 있습니다.
 */
.problem-publishing-page {
    display: flex;
    flex-direction: column; /* 자식 요소(top-container, scrollable-content-area)를 세로로 쌓음 */
    height: 100%; /* 부모(.main-content)의 높이를 100% 채웁니다. */
    width: 100%;
    gap: 1.5rem; /* 상단 컨테이너와 하단 스크롤 영역 사이의 간격 */
}

/*
 * 상단 영역 (문제 선택 위젯 + 툴바).
 * 이 영역은 내용만큼의 높이만 차지하고, 스크롤되지 않습니다.
 */
.sticky-top-container {
    flex-shrink: 0; /* 내용이 많아져도 이 컨테이너의 높이는 줄어들지 않습니다. */
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/*
 * [스크롤 영역 1: 테이블]
 * 문제 선택 테이블을 감싸는 컨테이너입니다.
 * 높이를 'vh' 단위로 제한하여, 이 안에서 테이블이 자체적으로 스크롤되도록 만듭니다.
 */
.selection-widget-container {
    flex-shrink: 0;
    max-height: 40vh; /* 화면 높이의 최대 40%까지만 차지하도록 제한 */
    min-height: 250px; /* 최소 높이를 보장하여 너무 작아지는 것을 방지 */
    display: flex;
    flex-direction: column;
}

/* 컨트롤 패널 스타일 (이전과 동일) */
.publishing-controls-panel {
    flex-shrink: 0;
    padding: 1rem;
    background: var(--glass-base-bg);
    border: 1px solid rgba(0, 0, 0, 0.08);
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1.5rem;
}

.control-group {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.control-group label {
    font-size: 0.9rem;
    color: var(--text-secondary);
    font-weight: 500;
    white-space: nowrap;
}

.control-group input[type="text"],
.control-group input[type="number"] {
    width: 70px;
    padding: 6px 8px;
    border-radius: 6px;
    border: 1px solid var(--text-placeholder);
    background-color: var(--main-content-bg-color);
    font-size: 0.9rem;
    text-align: center;
}

.control-group input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 2px rgba(var(--accent-color-rgb), 0.1);
}


/*
 * [스크롤 영역 2: 메인 콘텐츠]
 * 시험지 미리보기가 표시되는 메인 스크롤 영역입니다.
 * flex-grow: 1을 통해 상단 영역을 제외한 "모든 남는 수직 공간"을 차지합니다.
 */
.scrollable-content-area {
    flex-grow: 1; /* 이 속성이 마법을 부립니다. */
    overflow-y: auto; /* 내용(시험지 페이지들)이 이 영역을 넘어서면 세로 스크롤이 생깁니다. */
    min-height: 0; /* Flexbox 아이템이 부모보다 작아질 수 있도록 허용하는 필수 속성 */
    padding-right: 8px; /* 스크롤바와 콘텐츠가 겹치지 않도록 여백 확보 */
    scrollbar-gutter: stable; /* 스크롤바 유무에 따른 레이아웃 변경 방지 */
}

.status-message {
    padding: 3rem 1rem;
    text-align: center;
    color: var(--text-placeholder);
    font-size: 1.1rem;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}