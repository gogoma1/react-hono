/* react/pages/ProblemPublishingPage.css */

/*
 * [수정] 페이지 최상위 컨테이너
 * height: 100%를 제거하여 내용만큼 높이가 늘어나도록 합니다.
 * 이제 이 컨테이너는 부모인 main-content의 스크롤에 따라 움직입니다.
 */
.problem-publishing-page {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 1.5rem;
}

/*
 * 상단 영역 (문제 선택 위젯 + 툴바).
 * 이 영역은 이제 페이지 스크롤과 함께 자연스럽게 움직입니다.
 */
.sticky-top-container {
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/*
 * [스크롤 영역 1: 테이블]
 * 테이블 컨테이너는 기존과 동일하게 높이를 제한하여
 * 테이블 내용이 많을 때 자체 스크롤이 생기도록 합니다.
 */
.selection-widget-container {
    flex-shrink: 0;
    max-height: 40vh;
    min-height: 250px;
    display: flex;
    flex-direction: column;
    
}

/* 컨트롤 패널 스타일 (변경 없음) */
.publishing-controls-panel {
    flex-shrink: 0;
    padding: 1rem;
    background: var(--glass-base-bg);
    border: 1px solid var(--border-color-light);
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1.5rem;
}

.control-group {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.control-group label {
    font-size: 0.9rem;
    color: var(--text-secondary);
    font-weight: 500;
    white-space: nowrap;
}

.control-group input[type="text"],
.control-group input[type="number"] {
    width: 70px;
    padding: 6px 8px;
    border-radius: 6px;
    border: 1px solid var(--text-placeholder);
    background-color: var(--main-content-bg-color);
    font-size: 0.9rem;
    text-align: center;
}

.control-group input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 2px rgba(var(--accent-color-rgb), 0.1);
}


/*
 * [수정] 시험지 미리보기 영역.
 * flex-grow, overflow-y, min-height 속성을 모두 제거합니다.
 * 이제 이 영역은 스크롤을 가지지 않고, 내용만큼의 높이를 차지합니다.
 */


.status-message {
    padding: 3rem 1rem;
    text-align: center;
    color: var(--text-placeholder);
    font-size: 1.1rem;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}