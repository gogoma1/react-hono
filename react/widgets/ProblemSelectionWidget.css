/* ./react/widgets/ProblemSelectionWidget.css */

.problem-selection-widget {
    /* [핵심] 위젯 자체를 Flexbox 컨테이너로 설정 */
    display: flex;
    flex-direction: column; /* 자식 요소(헤더, 테이블)를 세로로 쌓음 */
    
    /* [핵심] 부모(.selection-widget-container)의 높이를 100% 채움 */
    height: 100%;
    
    /* 나머지 디자인 스타일 */
    overflow: hidden; /* 위젯 자체의 스크롤은 방지 */
    background-color: var(--glass-base-bg);
    border: 1px solid var(--border-color-light);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

.selection-header {
    padding: 12px 16px;
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-color-light);
    flex-shrink: 0; /* 헤더는 높이가 줄어들지 않도록 고정 */
}

/* 
 * [핵심] 테이블을 감싸는 컨테이너
 * 이 컨테이너가 헤더를 제외한 모든 남는 공간을 차지하고,
 * 내부에서 GlassTable이 스크롤되도록 만듭니다.
 */
.selection-table-container {
    flex-grow: 1;  /* 부모(.problem-selection-widget)의 남는 공간을 모두 차지 */
    min-height: 0; /* flex item이 부모보다 작아질 수 있도록 하는 필수 속성 */
    overflow: hidden; /* 이 컨테이너 자체는 스크롤되지 않음 (중요) */
    display: flex; /* 자식인 GlassTable이 높이를 100% 채울 수 있도록 */
    flex-direction: column; /* 자식을 세로로 쌓기 위함 */
}

/* 
 * [핵심] GlassTable 컴포넌트를 직접 감싸는 래퍼
 * (GlassTable.tsx 내부의 .glass-table-wrapper)
 * 이 래퍼가 높이를 100% 채우고, 내부의 스크롤 컨테이너를 제어합니다.
 */
.selection-table-container .glass-table-wrapper {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
}

/* 
 * [핵심] GlassTable의 실제 스크롤 영역
 * (GlassTable.tsx 내부의 .glass-table-scroll-container)
 * 이 영역이 남는 공간을 채우고, 가로/세로 스크롤을 모두 담당합니다.
 * 이 영역은 이제 세로 스크롤도 담당해야 합니다.
 */
.selection-table-container .glass-table-scroll-container {
    flex-grow: 1;
    overflow: auto; /* 가로/세로 스크롤 모두 자동 처리 */
}

/* --- 기존 기타 스타일 (유지) --- */
.keyword-badge {
    display: inline-block;
    background-color: rgba(var(--accent-color-rgb), 0.1);
    color: var(--accent-color-darker);
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.8rem;
    margin: 2px;
}